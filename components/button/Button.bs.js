// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Theme = require("../theme/Theme.bs.js");
var React = require("react");
var ReactNative = require("react-native");

function Button(Props) {
  var text = Props.text;
  var sizeOpt = Props.size;
  var variantOpt = Props.variant;
  var type_Opt = Props.type_;
  var size = sizeOpt !== undefined ? sizeOpt : /* normal */812216871;
  var variant = variantOpt !== undefined ? variantOpt : /* neutral */-349573817;
  var type_ = type_Opt !== undefined ? type_Opt : /* solid */12956715;
  var theme = React.useContext(Theme.themeContext);
  var sizeStyle = size !== 4896960 ? (
      size >= 812216871 ? ({
            paddingHorizontal: theme.button.paddingHorizontal.normal,
            paddingVertical: theme.button.paddingVertical.normal
          }) : ({
            paddingHorizontal: theme.button.paddingHorizontal.small,
            paddingVertical: theme.button.paddingVertical.small
          })
    ) : ({
        paddingHorizontal: theme.button.paddingHorizontal.big,
        paddingVertical: theme.button.paddingVertical.big
      });
  var color = variant >= -215364664 ? (
      variant >= 164354652 ? (
          variant >= 944645571 ? ({
                normal: theme.colors.success,
                light: theme.colors.successLight,
                dark: theme.colors.successDark
              }) : ({
                normal: theme.colors.warning,
                light: theme.colors.warningLight,
                dark: theme.colors.warningDark
              })
        ) : (
          variant >= 58474434 ? ({
                normal: theme.colors.primary,
                light: theme.colors.primaryLight,
                dark: theme.colors.primaryDark
              }) : ({
                normal: theme.colors.error,
                light: theme.colors.errorLight,
                dark: theme.colors.errorDark
              })
        )
    ) : (
      variant !== -499495052 ? (
          variant >= -349573817 ? ({
                normal: theme.colors.neutral500,
                light: theme.colors.neutral200,
                dark: theme.colors.neutral700
              }) : ({
                normal: theme.colors.info,
                light: theme.colors.infoLight,
                dark: theme.colors.infoDark
              })
        ) : ({
            normal: theme.colors.secondary,
            light: theme.colors.secondaryLight,
            dark: theme.colors.secondaryDark
          })
    );
  var typeStyle = type_ !== 12956715 ? ({
        button: {
          backgroundColor: color.normal
        },
        text: {
          color: "#fff"
        }
      }) : ({
        button: {
          backgroundColor: color.normal
        },
        text: {
          color: "#fff"
        }
      });
  var resolvedStyle = [
    {
      backgroundColor: theme.colors.primary,
      borderRadius: theme.button.borderRadius
    },
    sizeStyle,
    typeStyle.button
  ];
  var resolvedTextStyle = [typeStyle.text];
  return React.createElement(ReactNative.TouchableOpacity, {
              style: resolvedStyle,
              children: React.createElement(ReactNative.View, {
                    children: React.createElement(ReactNative.Text, {
                          style: resolvedTextStyle,
                          children: text
                        })
                  })
            });
}

var make = Button;

var $$default = Button;

exports.make = make;
exports.$$default = $$default;
exports.default = $$default;
exports.__esModule = true;
/* Theme Not a pure module */
