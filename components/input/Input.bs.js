// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Box = require("../box/Box.bs.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Theme = require("../theme/Theme.bs.js");
var React = require("react");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var ReactNative = require("react-native");

function Input(Props) {
  var componentOpt = Props.component;
  var onFocusOpt = Props.onFocus;
  var onBlurOpt = Props.onBlur;
  var style = Props.style;
  var component = componentOpt !== undefined ? Caml_option.valFromOption(componentOpt) : React.createElement(ReactNative.TextInput, { });
  var onFocus = onFocusOpt !== undefined ? onFocusOpt : (function (param) {
        
      });
  var onBlur = onBlurOpt !== undefined ? onBlurOpt : (function (param) {
        
      });
  var theme = Theme.useTheme(undefined);
  var match = React.useState((function () {
          return false;
        }));
  var setFocused = match[1];
  var resolvedStyle = [style];
  var inputElement = React.cloneElement(component, {
        style: resolvedStyle,
        onFocus: (function (e) {
            Curry._1(setFocused, (function (param) {
                    return true;
                  }));
            return Curry._1(onFocus, e);
          }),
        onBlur: (function (e) {
            Curry._1(setFocused, (function (param) {
                    return false;
                  }));
            return Curry._1(onBlur, e);
          })
      });
  return React.createElement(Box.make, {
              ph: theme.input.paddingHorizontal,
              h: theme.input.height,
              borderWidth: 1,
              borderRadius: theme.input.borderRadius,
              borderColor: match[0] ? theme.colors.foreground : theme.colors.neutral300,
              component: inputElement
            });
}

var make = Input;

var $$default = Input;

exports.make = make;
exports.$$default = $$default;
exports.default = $$default;
exports.__esModule = true;
/* Box Not a pure module */
